---
swagger: "2.0"
info:
  description: "これはサンプルです. \n\nYou can findout more about Swagger at \n[http://swagger.io](http://swagger.io)\
    \ or on \n[irc.freenode.net, #swagger](http://swagger.io/irc/).\n"
  version: "1.0.0"
  title: "Lumen Authors API"
  contact:
    email: "fendo181git@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "virtserver.swaggerhub.com"
basePath: "/Fendo181/APP/1.0.0"
tags:
- name: "authors"
  description: "Authors Info"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
schemes:
- "https"
- "http"
paths:
  /authors:
    get:
      tags:
      - "authors"
      summary: "Get all author by id"
      operationId: "authorsGET"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters: []
      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/Author"
      x-swagger-router-controller: "Authors"
    post:
      tags:
      - "authors"
      summary: "Create an new author"
      operationId: "authorsPOST"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Add New Author"
        required: true
        schema:
          $ref: "#/definitions/Author"
      responses:
        200:
          description: "Success"
      x-swagger-router-controller: "Authors"
  /authors/{id}:
    get:
      tags:
      - "authors"
      summary: "Get an author by id"
      operationId: "authorsIdGET"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id"
        in: "path"
        description: "The id that needs to be fetched."
        required: true
        type: "string"
      responses:
        200:
          description: "successful"
          schema:
            $ref: "#/definitions/Author"
        400:
          description: "Invalid id supplied"
        404:
          description: "User not found"
      x-swagger-router-controller: "Authors"
    put:
      tags:
      - "authors"
      summary: "Updated author by id"
      description: "Update Author info"
      operationId: "authorsIdPUT"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id"
        in: "path"
        description: "name that need to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated user object"
        required: true
        schema:
          $ref: "#/definitions/Author"
      responses:
        200:
          description: "author info"
      x-swagger-router-controller: "Authors"
    delete:
      tags:
      - "authors"
      summary: "Delete author by id"
      description: "This can only be done by the logged in user."
      operationId: "authorsIdDELETE"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id"
        in: "path"
        description: "The name that needs to be deleted"
        required: true
        type: "string"
      responses:
        200:
          description: "Deleted Successfully"
      x-swagger-router-controller: "Authors"
definitions:
  Author:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      email:
        type: "string"
      github:
        type: "string"
      twitter:
        type: "string"
      location:
        type: "string"
      latest_article_published:
        type: "string"
    example:
      github: "github"
      twitter: "twitter"
      name: "name"
      location: "location"
      id: 0
      email: "email"
      latest_article_published: "latest_article_published"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
